{"version":3,"file":"static/js/310.08c26c18.chunk.js","mappings":"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","sources":["webpack://techland-shop3/./src/pages/Registration/Registration.module.scss?74bd","pages/Registration/Registration.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Registration_root__NMtxy\",\"wrapper\":\"Registration_wrapper__SgDh1\",\"inputBox\":\"Registration_inputBox__OF-RX\",\"policy\":\"Registration_policy__ZAP1Q\",\"button\":\"Registration_button__duHHZ\",\"text\":\"Registration_text__XJgEX\",\"error\":\"Registration_error__GtuZm\",\"or\":\"Registration_or__4z162\",\"signUp__wrapper\":\"Registration_signUp__wrapper__3yAN6\",\"signUpWithGoogle\":\"Registration_signUpWithGoogle__bc5k7\"};","import style from \"./Registration.module.scss\"\r\nimport {useForm} from \"react-hook-form\"\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { app } from \"../../auth/firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\"\r\n\r\nexport type UserDataType = {\r\n    name: string;\r\n    email:string;\r\n    password: string;\r\n    confirmPassword: string;\r\n    termsAndConditions: boolean;\r\n}\r\n\r\nconst Registration: React.FC = () => {\r\n    const navigate = useNavigate()\r\n    const {register, handleSubmit, formState: {errors}, getValues} = useForm<UserDataType>()\r\n    const [emailExistError, setEmailExistError] = useState(false)\r\n    const onSubmit = async (data: UserDataType)=> {\r\n        const auth = getAuth(app);\r\n        try {\r\n            await createUserWithEmailAndPassword(auth, data.email, data.password)\r\n            navigate(\"/techland-shop/account\")\r\n        } catch (error: any) {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n            console.log(errorCode, errorMessage)\r\n            if(errorCode == \"auth/email-already-in-use\"){\r\n                setEmailExistError(true)\r\n            }\r\n        }\r\n       \r\n    }\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n    }, [])\r\n\r\n    return (  \r\n        <div className={style.root}>\r\n            <div className={style.wrapper}>\r\n            <h2>Registration</h2>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={style.inputBox}>\r\n                    <input\r\n                        {...register(\"name\", {\r\n                            required: true,\r\n                            maxLength: {\r\n                                value: 20,\r\n                                message: \"Name shouldn't be at most 20 characters\"\r\n                            }\r\n                        })}\r\n                        type=\"text\" placeholder=\"Enter your name\" />\r\n                         {errors.name && <p className={style.error}>{errors.name.message as string}</p>}\r\n                </div>\r\n                <div className={style.inputBox}>\r\n                    <input\r\n                        {...register(\"email\", {\r\n                            required: true,\r\n                            pattern: {\r\n                                value:  /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\r\n                                message: \"Invalid email\"\r\n                            }\r\n                        })}\r\n                        type=\"text\" placeholder=\"Enter your email\" />\r\n                        {errors.email &&  <p className={style.error}>{errors.email.message as string}</p>}\r\n                </div>\r\n                <div className={style.inputBox}>\r\n                    <input\r\n                        {...register(\"password\", {\r\n                            required: true,\r\n                            minLength:{\r\n                                value: 5,\r\n                                message: \"Password should be at least 5 characters\"\r\n                            }\r\n                        })}\r\n                        type=\"password\" placeholder=\"Create password\" />\r\n                        {errors.password && <p className={style.error}>{errors.password.message as string}</p>}\r\n                </div>\r\n                <div className={style.inputBox}>\r\n                    <input\r\n                        {...register(\"confirmPassword\", {\r\n                            required: true,\r\n                            validate: (value) => value === getValues(\"password\") || \"Password don't match\"\r\n                        })}\r\n                        type=\"password\" placeholder=\"Confirm password\" />\r\n                         {errors.confirmPassword && <p className={style.error}>{errors.confirmPassword.message as string}</p>}\r\n                </div>\r\n                <div className={style.policy}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    {...register(\"termsAndConditions\", {\r\n                        required: {\r\n                            value: true,\r\n                            message: \"You must accept the terms and conditions\"\r\n                        }\r\n                    })}\r\n                />\r\n                <h3>I accept all terms & conditions</h3>\r\n                </div>\r\n                {errors.termsAndConditions && <p className={style.error}>{errors.termsAndConditions.message as string}</p>}\r\n                <div className={style.button}>\r\n                    {emailExistError && (<p>Email already in use</p>)}\r\n                    <button type=\"submit\">Register Now</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default Registration;"],"names":["navigate","useNavigate","_useForm","useForm","register","handleSubmit","errors","formState","getValues","_useState","useState","_useState2","_slicedToArray","emailExistError","setEmailExistError","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","auth","errorCode","errorMessage","wrap","_context","prev","next","getAuth","app","createUserWithEmailAndPassword","email","password","t0","code","message","console","log","stop","_x","apply","arguments","useEffect","window","scrollTo","_jsx","className","style","children","_jsxs","_objectSpread","required","maxLength","value","type","placeholder","name","pattern","minLength","validate","confirmPassword","termsAndConditions"],"sourceRoot":""}